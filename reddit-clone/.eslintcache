[{"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/index.js":"1","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/App.js":"2","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/reportWebVitals.js":"3","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/store.js":"4","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/PostInDetail/reducer.js":"5","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/home/reducer.js":"6","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/auth/reducer.js":"7","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/ProfileData/reducer.js":"8","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Routes/Routes.jsx":"9","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/landing/Landing.jsx":"10","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/PostInDetail/actionTypes.js":"11","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/home/actionTypes.js":"12","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/auth/actionTypes.js":"13","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/ProfileData/actionTypes.js":"14","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Routes/Signup.jsx":"15","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Routes/Login.jsx":"16","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/Navbar.jsx":"17","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostInDetail/Comments1.jsx":"18","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/Community/Sider.jsx":"19","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostStory/PostStory1.jsx":"20","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/SubRedditShow.jsx":"21","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/Content.jsx":"22","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/auth/action.js":"23","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/PostInDetail/action.js":"24","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/Community/utils.js":"25","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostInDetail/Comments2.jsx":"26","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/Community/RightCards.jsx":"27","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostStory/PostStory2.jsx":"28","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/searchbar/Searchbar.jsx":"29","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/logo/Logo.jsx":"30","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/actions/Actions.jsx":"31","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/dropdown/Dropdown.jsx":"32","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostInDetail/Post/Posts.jsx":"33","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/titlebar/Mainbar.jsx":"34","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/subreddit/SubReddit.jsx":"35","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/AboutSubRedditCard/AboutSubRedditCards.jsx":"36","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/titlebar/Mainbar.jsx":"37","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/trending/Trending.jsx":"38","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/side-bar/Sidebar.jsx":"39","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/ProfileData/action.js":"40","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/SubRedditPost/SubRedditPosts.jsx":"41","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/AboutCommunity/AboutCommunity.jsx":"42","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/Post/Posts.jsx":"43","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/community/Community.jsx":"44","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/home/action.js":"45"},{"size":955,"mtime":1612801310805,"results":"46","hashOfConfig":"47"},{"size":172,"mtime":1612801310801,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1612801310805,"results":"49","hashOfConfig":"47"},{"size":730,"mtime":1612801310805,"results":"50","hashOfConfig":"47"},{"size":796,"mtime":1612801310805,"results":"51","hashOfConfig":"47"},{"size":660,"mtime":1612801310805,"results":"52","hashOfConfig":"47"},{"size":731,"mtime":1612801310805,"results":"53","hashOfConfig":"47"},{"size":1322,"mtime":1612801310805,"results":"54","hashOfConfig":"47"},{"size":1187,"mtime":1612801310805,"results":"55","hashOfConfig":"47"},{"size":202,"mtime":1612801310805,"results":"56","hashOfConfig":"47"},{"size":174,"mtime":1612801310805,"results":"57","hashOfConfig":"47"},{"size":132,"mtime":1612801310805,"results":"58","hashOfConfig":"47"},{"size":277,"mtime":1612801310805,"results":"59","hashOfConfig":"47"},{"size":364,"mtime":1612801310805,"results":"60","hashOfConfig":"47"},{"size":2074,"mtime":1612801310805,"results":"61","hashOfConfig":"47"},{"size":1714,"mtime":1612801310805,"results":"62","hashOfConfig":"47"},{"size":381,"mtime":1612801310805,"results":"63","hashOfConfig":"47"},{"size":6658,"mtime":1612801310801,"results":"64","hashOfConfig":"47"},{"size":6976,"mtime":1612801310801,"results":"65","hashOfConfig":"47"},{"size":7460,"mtime":1612801310801,"results":"66","hashOfConfig":"47"},{"size":601,"mtime":1612801310805,"results":"67","hashOfConfig":"47"},{"size":527,"mtime":1612801310801,"results":"68","hashOfConfig":"47"},{"size":1626,"mtime":1612801310805,"results":"69","hashOfConfig":"47"},{"size":1006,"mtime":1612801310805,"results":"70","hashOfConfig":"47"},{"size":158,"mtime":1612801310801,"results":"71","hashOfConfig":"47"},{"size":5201,"mtime":1612801310801,"results":"72","hashOfConfig":"47"},{"size":6727,"mtime":1612801310801,"results":"73","hashOfConfig":"47"},{"size":1291,"mtime":1612801310801,"results":"74","hashOfConfig":"47"},{"size":331,"mtime":1612801310805,"results":"75","hashOfConfig":"47"},{"size":392,"mtime":1612801310805,"results":"76","hashOfConfig":"47"},{"size":1086,"mtime":1612801310805,"results":"77","hashOfConfig":"47"},{"size":548,"mtime":1612801310805,"results":"78","hashOfConfig":"47"},{"size":3139,"mtime":1612801310801,"results":"79","hashOfConfig":"47"},{"size":1593,"mtime":1612801310805,"results":"80","hashOfConfig":"47"},{"size":593,"mtime":1612801310805,"results":"81","hashOfConfig":"47"},{"size":277,"mtime":1612801310805,"results":"82","hashOfConfig":"47"},{"size":1575,"mtime":1612801310801,"results":"83","hashOfConfig":"47"},{"size":2379,"mtime":1612801310805,"results":"84","hashOfConfig":"47"},{"size":1052,"mtime":1612801310801,"results":"85","hashOfConfig":"47"},{"size":1646,"mtime":1612801310805,"results":"86","hashOfConfig":"47"},{"size":3328,"mtime":1612801310805,"results":"87","hashOfConfig":"47"},{"size":1127,"mtime":1612801310805,"results":"88","hashOfConfig":"47"},{"size":3663,"mtime":1612801310801,"results":"89","hashOfConfig":"47"},{"size":2277,"mtime":1612801310801,"results":"90","hashOfConfig":"47"},{"size":2454,"mtime":1612801310805,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1rioaqt",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/index.js",[],["189","190"],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/App.js",["191"],"import \"./App.css\";\nimport Landing from \"./Components/landing/Landing\";\nimport Routes from \"./Routes/Routes\";\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/reportWebVitals.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/store.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/PostInDetail/reducer.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/home/reducer.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/auth/reducer.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/ProfileData/reducer.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Routes/Routes.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/landing/Landing.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/PostInDetail/actionTypes.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/home/actionTypes.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/auth/actionTypes.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/ProfileData/actionTypes.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Routes/Signup.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Routes/Login.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/Navbar.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostInDetail/Comments1.jsx",["192"],"import React from \"react\";\nimport { Comments2 } from \"./Comments2\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getComments } from \"../../Redux/PostInDetail/action\";\nimport { v4 as uuid } from \"uuid\";\nimport { updateComments } from \"../../Redux/PostInDetail/action\";\nimport { Posts } from \"./Post/Posts\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nconst Comments1 = () => {\n  const { subredditName, postId } = useParams();\n\n  // function to fetch comments on load\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getComments(subredditName, postId));\n  }, [dispatch]);\n\n  const isLoading = useSelector((state) => state.commentsReducer.isLoading);\n  const isError = useSelector((state) => state.commentsReducer.isError);\n  const isSuccess = useSelector((state) => state.commentsReducer.isSuccess);\n  const commentsData = useSelector(\n    (state) => state.commentsReducer.data.comments\n  );\n  const upvotes = useSelector((state) => state.commentsReducer.data.upvotes);\n  const upvote_status = useSelector(\n    (state) => state.commentsReducer.data.upvote_status\n  );\n\n  const { image_src, subreddit, username, title, description } = useSelector(\n    (state) => state.commentsReducer.data\n  );\n  const comment_count = useSelector(\n    (state) => state.commentsReducer.data.comment_count\n  );\n\n  // function for retrieve the recursed ladder of comments2 component.\n  const arrangeData = (data) => {\n    if (data.length === 0) {\n      return null;\n    }\n    let res = [];\n    for (let i = 0; i < data.reply.length; i++) {\n      res.push(arrangeData(data.reply[i]));\n    }\n    return [\n      <Comments2\n        title={data.title}\n        id={data.id}\n        upvote={data.upvote}\n        upvote_status={data.upvote_status}\n        key={data.id}\n        subredditName={subredditName}\n        postId={postId}\n      >\n        {res}\n      </Comments2>,\n    ];\n  };\n\n  //Adding a comment to the main post\n\n  const [commentTitle, setCommentTitle] = React.useState(\"\");\n\n  const handleAddMainComment = (e) => {\n    e.preventDefault();\n    var newComment = {\n      id: uuid(),\n      title: commentTitle,\n      upvote: 0,\n      upvote_status: null,\n      reply: [],\n    };\n\n    var updatedData = [...commentsData, newComment];\n\n    dispatch(\n      updateComments(\n        { comments: updatedData, comment_count: comment_count + 1 },\n        subredditName,\n        postId\n      )\n    );\n  };\n\n  // handling close button\n\n  const history = useHistory();\n\n  const handleCloseButton = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        backgroundColor: \"rgb(46,47,48)\",\n        minHeight: \"96vh\",\n        marginTop: \"25px\",\n      }}\n    >\n      <div\n        style={{\n          border: \"1px solid black\",\n          width: \"70vw\",\n          margin: \"auto\",\n          backgroundColor: \"rgb(218,224,230)\",\n          minHeight: \"96vh\",\n        }}\n      >\n        <div\n          style={{\n            height: \"50px\",\n            // border: \"1px solid black\",\n            backgroundColor: \"#030303\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"60%\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                width: \"10%\",\n              }}\n            >\n              <span style={{ color: \"grey\" }}>|</span>\n              <ArrowUpwardIcon style={{ color: \"grey\" }} />\n              <span style={{ color: \"grey\" }}>{upvotes}</span>\n              <ArrowDownwardIcon style={{ color: \"grey\" }} />\n              <span style={{ color: \"grey\" }}>|</span>\n            </div>\n            <div style={{ overflow: \"hidden\", color: \"gray\", width: \"60%\" }}>\n              {title}\n            </div>\n          </div>\n          <div\n            onClick={handleCloseButton}\n            style={{\n              color: \"grey\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              cursor: \"pointer\",\n            }}\n          >\n            <span>Close </span>&nbsp;\n            <CancelIcon />\n          </div>\n        </div>\n        <div\n          style={{\n            margin: \"10px auto\",\n            width: \"45vw\",\n            minWidth: \"800px\",\n            backgroundColor: \"white\",\n            minHeight: \"96vh\",\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              margin: \"20px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            {isLoading && (\n              <div>\n                <img\n                  src=\"https://media4.giphy.com/media/y1ZBcOGOOtlpC/giphy.gif?cid=ecf05e47uy09nkjz7ji2lbq2g18hakzxa64b2to8t9qfvlh8&rid=giphy.gif\"\n                  alt=\"loading\"\n                />\n              </div>\n            )}\n            {isSuccess && (\n              <div>\n                <Posts\n                  upvotes={upvotes}\n                  subreddit={subreddit}\n                  username={username}\n                  title={title}\n                  image_src={image_src}\n                  description={description}\n                  comment_count={comment_count}\n                  upvote_status={upvote_status}\n                  subredditName={subredditName}\n                  postId={postId}\n                />\n                <div>\n                  <div>\n                    <form\n                      onSubmit={handleAddMainComment}\n                      style={{ display: \"flex\" }}\n                    >\n                      <input\n                        placeholder=\"Add a Comment\"\n                        value={commentTitle}\n                        onChange={(e) => setCommentTitle(e.target.value)}\n                      />\n                      <input type=\"submit\" />\n                    </form>\n                  </div>\n                </div>\n                {commentsData.map((item) => arrangeData(item))}\n              </div>\n            )}\n            {isError && <div>Something Went wrong...</div>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Comments1 };\n","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/Community/Sider.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostStory/PostStory1.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/SubRedditShow.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/Content.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/auth/action.js",["193","194","195"],"import {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  SIGNUP_FAILURE,\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n} from \"./actionTypes\";\nimport axios from \"axios\";\n\nconst loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST,\n  };\n};\n\nconst loginSuccess = (payload) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload,\n  };\n};\n\nconst loginFailure = () => {\n  return {\n    type: LOGIN_FAILURE,\n  };\n};\nconst signRequest = () => {\n  return {\n    type: SIGNUP_REQUEST,\n  };\n};\nconst signSuccess = () => {\n  return {\n    type: SIGNUP_SUCCESS,\n  };\n};\nconst signFailure = () => {\n  return {\n    type: SIGNUP_FAILURE,\n  };\n};\n\nconst signData = ({ id, username, password, email, name }) => (dispatch) => {\n  dispatch(signRequest());\n  axios\n    .post(\"https://reddit-mock-server.herokuapp.com/user\", {\n      id,\n      username,\n      password,\n      email,\n      name,\n      posts: [],\n      community: [],\n      save_post: [],\n    })\n    .then((res) => console.log(res.data))\n    .catch((err) => console.log(err));\n};\n\nconst loginData = ({ username, password }) => (dispatch) => {\n  dispatch(loginRequest());\n  axios\n    .get(\"https://reddit-mock-server.herokuapp.com/user\")\n    .then((res) => {\n      //   console.log(res);\n      let arr = res.data;\n      let flag = false;\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i].username == username && arr[i].password == password) {\n          dispatch(loginSuccess(arr[i]));\n          flag = true;\n        }\n      }\n      if (!flag) {\n        dispatch(loginFailure());\n      }\n    })\n    .catch((err) => dispatch(signFailure()));\n};\nexport { signData, loginData };\n","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/PostInDetail/action.js",["196"],"import axios from \"axios\";\nimport {\n  GET_COMMENTS_FAIL,\n  GET_COMMENTS_REQUEST,\n  GET_COMMENTS_SUCCESS,\n} from \"./actionTypes\";\n\nconst commentsRequest = () => {\n  return {\n    type: GET_COMMENTS_REQUEST,\n  };\n};\n\nconst commentsSuccess = (payload) => {\n  return {\n    type: GET_COMMENTS_SUCCESS,\n    payload,\n  };\n};\n\nconst commentsFail = () => {\n  return {\n    type: GET_COMMENTS_FAIL,\n  };\n};\n\nexport const getComments = (subredditName, postId) => (dispatch) => {\n  // dispatch(commentsRequest());\n  axios\n    .get(`https://reddit-mock-server.herokuapp.com/${subredditName}/${postId}`)\n    .then((res) => dispatch(commentsSuccess(res.data)))\n    .catch((err) => dispatch(commentsFail()));\n};\n\nexport const updateComments = (updatedData, subredditName, postId) => (\n  dispatch\n) => {\n  // dispatch(commentsRequest());\n  axios\n    .patch(\n      `https://reddit-mock-server.herokuapp.com/${subredditName}/${postId}`,\n      updatedData\n    )\n    .then(() => dispatch(getComments(subredditName, postId)));\n};\n","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/Community/utils.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostInDetail/Comments2.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/Community/RightCards.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostStory/PostStory2.jsx",["197"],"import React, { useState } from 'react';\nimport { EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { convertToHTML } from 'draft-convert';\nimport DOMPurify from 'dompurify';\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nconst PostStory2 = ({ handleDesc1 }) => {\n\tconst [editorState, setEditorState] = useState(() =>\n\t\tEditorState.createEmpty()\n\t);\n\tconst [convertedContent, setConvertedContent] = useState(null);\n\tconst handleEditorChange = (state) => {\n\t\tsetEditorState(state);\n\t\tconvertContentToHTML();\n\t};\n\tconst convertContentToHTML = () => {\n\t\tlet currentContentAsHTML = convertToHTML(editorState.getCurrentContent());\n\t\tsetConvertedContent(currentContentAsHTML);\n\t\thandleDesc1(createMarkup(currentContentAsHTML).__html);\n\t};\n\tconst createMarkup = (html) => {\n\t\treturn {\n\t\t\t__html: DOMPurify.sanitize(html),\n\t\t};\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Editor\n\t\t\t\teditorState={editorState}\n\t\t\t\tonEditorStateChange={handleEditorChange}\n\t\t\t\twrapperClassName='wrapper-class'\n\t\t\t\teditorClassName='editor-class'\n\t\t\t\ttoolbarClassName='toolbar-class'\n\t\t\t/>\n\t\t\t{/* <div\n        className=\"preview\"\n        dangerouslySetInnerHTML={createMarkup(convertedContent)}\n      ></div> */}\n\t\t</div>\n\t);\n};\nexport { PostStory2 };\n","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/searchbar/Searchbar.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/logo/Logo.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/actions/Actions.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/navbar/dropdown/Dropdown.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/PostInDetail/Post/Posts.jsx",["198"],"import React from \"react\";\n\nimport \"./Posts.css\";\n\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport ModeCommentIcon from \"@material-ui/icons/ModeComment\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateComments } from \"../../../Redux/PostInDetail/action\";\n\nexport function Posts({\n  upvotes,\n  subreddit,\n  username,\n  title,\n  image_src,\n  description,\n  comment_count,\n  upvote_status,\n  subredditName,\n  postId,\n}) {\n  const dispatch = useDispatch();\n\n  const handleUpvoteCountIncrease = () => {\n    if (upvote_status == null || upvote_status === false) {\n      const payload = {\n        upvotes: upvotes + 1,\n        upvote_status: true,\n      };\n\n      dispatch(updateComments(payload, subredditName, postId));\n    }\n  };\n\n  const handleUpvoteCountDecrease = () => {\n    if (upvote_status == null || upvote_status === true) {\n      const payload = {\n        upvotes: upvotes - 1,\n        upvote_status: false,\n      };\n\n      dispatch(updateComments(payload, subredditName, postId));\n    }\n  };\n\n  return (\n    <div className=\"posts-wrapper\">\n      <div className=\"post\" style={{ minWidth: \"500px\" }}>\n        <div className=\"post-sidebar\">\n          <ArrowUpwardIcon\n            className=\"upvote\"\n            onClick={handleUpvoteCountIncrease}\n          />\n          <span>{upvotes}</span>\n          <ArrowDownwardIcon\n            className=\"downvote\"\n            onClick={handleUpvoteCountDecrease}\n          />\n        </div>\n        <div className=\"post-title\">\n          <img src=\"assets/images/subreddit.jpg\" alt=\"\" />\n          <span className=\"subreddit-name\">r/{subreddit}</span>\n          <span className=\"post-user\">Posted by</span>\n          <span className=\"post-user underline\">u/{username}</span>\n          <div className=\"spacer\"></div>\n          {/* <Button label=\"+ JOIN\" /> */}\n          <Button className=\"button-font\" color=\"primary\">\n            +JOIN\n          </Button>\n        </div>\n        <div className=\"post-body\">\n          <span className=\"title\">{title}</span>\n          {image_src && <img src={image_src} alt=\"\" />}\n          {description && (\n            <div\n              className=\"description\"\n              dangerouslySetInnerHTML={{ __html: description }}\n            ></div>\n          )}\n        </div>\n        <div className=\"post-footer\">\n          <div className=\"comments footer-action\">\n            <ModeCommentIcon className=\"comment-icon\" />\n            <span>{comment_count} Comments</span>\n          </div>\n          <div className=\"share footer-action\">\n            <ShareIcon />\n            <span>Share</span>\n          </div>\n          <div className=\"save footer-action\">\n            <BookmarkIcon />\n            <span>Save</span>\n          </div>\n          <MoreHorizIcon className=\"more-icon footer-action\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/titlebar/Mainbar.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/subreddit/SubReddit.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/AboutSubRedditCard/AboutSubRedditCards.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/titlebar/Mainbar.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/trending/Trending.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/side-bar/Sidebar.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/ProfileData/action.js",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/SubRedditPost/SubRedditPosts.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/SubRedditContent/AboutCommunity/AboutCommunity.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/Post/Posts.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Components/content/community/Community.jsx",[],"/home/uditanshu/Masai/Masai Notes/Reddit/delta/reddit-clone/src/Redux/home/action.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":21,"column":6,"nodeType":"209","endLine":21,"endColumn":16,"suggestions":"210"},{"ruleId":"203","severity":1,"message":"211","line":34,"column":7,"nodeType":"205","messageId":"206","endLine":34,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":71,"column":29,"nodeType":"214","messageId":"215","endLine":71,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":71,"column":60,"nodeType":"214","messageId":"215","endLine":71,"endColumn":62},{"ruleId":"203","severity":1,"message":"216","line":8,"column":7,"nodeType":"205","messageId":"206","endLine":8,"endColumn":22},{"ruleId":"203","severity":1,"message":"217","line":12,"column":9,"nodeType":"205","messageId":"206","endLine":12,"endColumn":25},{"ruleId":"203","severity":1,"message":"218","line":13,"column":10,"nodeType":"205","messageId":"206","endLine":13,"endColumn":21},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Landing' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'postId' and 'subredditName'. Either include them or remove the dependency array.","ArrayExpression",["221"],"'signSuccess' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'commentsRequest' is assigned a value but never used.","'convertedContent' is assigned a value but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},"Update the dependencies array to be: [dispatch, postId, subredditName]",{"range":"224","text":"225"},[797,807],"[dispatch, postId, subredditName]"]